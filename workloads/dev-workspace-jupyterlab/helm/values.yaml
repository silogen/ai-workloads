metadata:
  labels: {}

image: "python:3.12"
imagePullPolicy: Always
gpus: 0
memory_per_gpu: 64 # Gi
cpu_per_gpu: 4

env_vars:
  BUCKET_STORAGE_HOST: http://minio.minio-tenant-default.svc.cluster.local:80
  BUCKET_STORAGE_ACCESS_KEY:
    name: minio-credentials
    key: minio-access-key
  BUCKET_STORAGE_SECRET_KEY:
    name: minio-credentials
    key: minio-secret-key
  PIPX_HOME: /workload/.pipx
  PIPX_BIN_DIR: /workload/bin

storage:
  ephemeral:
    quantity: 128Gi
    storageClassName: mlstorage
    accessModes:
      - ReadWriteOnce
  dshm:
    sizeLimit: 16Gi

deployment:
  ports:
    http: 8888

# startupProbe - checks if the container has successfully started. It disables liveness and readiness probes until it succeeds, useful for slow-starting applications.
# livenessProbe - checks if the container is still alive. If it fails, Kubernetes restarts the container to recover from failure.
# readinessProbe - checks if the container is ready to serve traffic. If it fails, the container is removed from the service's endpoints but remains running.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
startupProbe: {}
livenessProbe:
  httpGet:
    path: /api
    port: http
readinessProbe:
  httpGet:
    path: /api
    port: http

entrypoint: |
  export PATH=$PATH:$PIPX_BIN_DIR
  cd /workload
  pip install pipx ipykernel
  pipx install --include-deps jupyter
  python -m ipykernel install --user --name=default-python3
  jupyter-lab --ServerApp.token='' --ServerApp.ip='0.0.0.0' --ServerApp.allow_root=True --no-browser

# kaiwo settings (if enabled, use kaiwo CRDs to have kaiwo operator manage the workload)
kaiwo:
  enabled: false
