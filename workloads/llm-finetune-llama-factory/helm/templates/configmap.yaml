apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-configs"
data:
  llama_factory_config.yaml: |
    output_dir: /workdir/checkpoints
    {{- if ne (int $.Values.nodes) 1 }}
    ray_run_name: "{{ .Release.Name }}"
    ray_storage_path: /workdir/ray_storage
    ray_num_workers: {{ .Values.nodes }}
    resources_per_worker:
      GPU: {{ .Values.gpusPerNode }}
    {{- end }}
{{ toYaml .Values.llamaFactoryConfig | indent 4 }}
  entrypoint.sh: |
    #!/bin/bash
    # Print GPU Info:
    rocm-smi
    mkdir -p /workdir/checkpoints
    {{- if .Values.checkpointsRemote }}
    # Setup MinIO
    mc alias set minio-host $BUCKET_STORAGE_HOST $BUCKET_STORAGE_ACCESS_KEY $BUCKET_STORAGE_SECRET_KEY
    # Sync checkpoints from remote to local
    if mc mirror minio-host/{{ .Values.checkpointsRemote | trimSuffix "/" }}/ /workdir/checkpoints 2>/dev/null; then
      echo 'Downloaded checkpoints from {{ .Values.checkpointsRemote}} to /workdir/checkpoints'
      ls -lah /workdir/checkpoints
    else
      echo 'No checkpoints found yet'
    fi
    echo "Starting checkpoint sync process"
    mc mirror \
      --watch \
      /workdir/checkpoints \
      minio-host/{{ .Values.checkpointsRemote | trimSuffix "/" }}/ &
    uploadPID=$!
    {{- end }}
    # Run training:
    echo "Starting training process"
    cd LLaMA-Factory/
    {{- if ne (int $.Values.nodes) 1 }}
    export USE_RAY=1
    {{- end }}
    llamafactory-cli train /configs/llama_factory_config.yaml
    {{- if .Values.checkpointsRemote }}
    echo "Training done, stop the upload process"
    kill $uploadPID
    wait $uploadPID || true
    # Once more to ensure everything gets uploaded
    echo 'Training done, syncing once more...'
    mc mirror --overwrite \
      /workdir/checkpoints \
      minio-host/{{ .Values.checkpointsRemote | trimSuffix "/" }}/
    {{- end }}
    echo 'All done, exiting'
