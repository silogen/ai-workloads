{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "metadata": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Metadata labels",
          "additionalProperties": true
        }
      },
      "required": []
    },
    "image": {
      "type": "string",
      "description": "Image repository and tag"
    },
    "imagePullPolicy": {
      "type": "string",
      "description": "Image pull policy",
      "enum": [
        "Always",
        "IfNotPresent",
        "Never"
      ]
    },
    "gpus": {
      "type": "integer",
      "description": "Number of GPUs",
      "minimum": 0
    },
    "env_vars": {
      "type": "object",
      "properties": {
        "MODEL": {
          "type": "string",
          "description": "Model identifier"
        },
        "ROCM_ARCH": {
          "type": "string",
          "description": "ROCm architecture"
        },
        "GPU_LAYERS": {
          "type": "string",
          "description": "Number of GPU layers"
        },
        "TEMP": {
          "type": "string",
          "description": "Temperature setting"
        },
        "CTX_SIZE": {
          "type": "string",
          "description": "Context size"
        },
        "BUCKET_STORAGE_HOST": {
          "type": "string",
          "description": "Bucket storage host URL"
        },
        "BUCKET_STORAGE_ACCESS_KEY": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the secret containing the bucket storage access key"
            },
            "key": {
              "type": "string",
              "description": "Key of the bucket storage access key in the secret"
            }
          },
          "required": [
            "name",
            "key"
          ]
        },
        "BUCKET_STORAGE_SECRET_KEY": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the secret containing the bucket storage secret key"
            },
            "key": {
              "type": "string",
              "description": "Key of the bucket storage secret key in the secret"
            }
          },
          "required": [
            "name",
            "key"
          ]
        },
        "BIN_PATH": {
          "type": "string",
          "description": "Path to the MioIO bucket containing Llama.cpp binaries"
        }
      },
      "required": [
        "MODEL"
      ]
    },
    "storage": {
      "type": "object",
      "properties": {
        "ephemeral": {
          "type": "object",
          "properties": {
            "quantity": {
              "type": "string",
              "description": "Ephemeral storage quantity"
            },
            "storageClassName": {
              "type": "string",
              "description": "Ephemeral storage class name"
            },
            "accessModes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Ephemeral storage access modes"
            }
          },
          "required": [
            "quantity",
            "storageClassName",
            "accessModes"
          ]
        },
        "dshm": {
          "type": "object",
          "properties": {
            "sizeLimit": {
              "type": "string",
              "description": "Size limit for /dev/shm"
            }
          },
          "required": [
            "sizeLimit"
          ]
        }
      },
      "required": [
        "ephemeral",
        "dshm"
      ]
    },
    "deployment": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "description": "Deployment port"
        }
      },
      "required": [
        "port"
      ]
    },
    "entrypoint": {
      "type": "string",
      "description": "Entrypoint script"
    }
  },
  "required": [
    "image",
    "imagePullPolicy",
    "gpus",
    "env_vars",
    "storage",
    "deployment",
    "entrypoint"
  ]
}