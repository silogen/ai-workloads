apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-job"
  namespace: "{{ .Release.Namespace }}"
  {{- if .Values.labels }}
  labels:
    {{- range $label, $value := .Values.labels }}
    {{ $label }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: resource-delivery
        image: ghcr.io/silogen/logistics:v0.1
        imagePullPolicy: Always
        command:
        - sh
        - -e
        - -u
        - -c
        args:
        - |
          ########################
          echo 'Setting up minio'
          mc alias set minio-host ${BUCKET_STORAGE_HOST} ${BUCKET_STORAGE_ACCESS_KEY} ${BUCKET_STORAGE_SECRET_KEY}
          ########################
          echo 'Downloading the model to the local container'
          mkdir -p /downloads/downloaded_model
          huggingface-cli download {{ .Values.modelID }} \
            --exclude '{{ default "original/*" .Values.downloadExcludeGlob }}' \
            {{- if .Values.modelRevision }}
            --revision {{ .Values.modelRevision }} \
            {{- end }}
            --local-dir /downloads/downloaded_model
          ########################
          echo 'Uploading the model to the bucket, to {{ .Values.bucketModelPath | trimSuffix "/" }}'
          mc mirror --exclude '.cache/huggingface/*' \
            --exclude '.gitattributes' \
            {{- if .Values.allowOverwrite }}
            --overwrite \
            {{- end }}
            /downloads/downloaded_model/ minio-host/{{ .Values.bucketModelPath | trimSuffix "/" }}
          ########################
          echo 'Downloading and processing data'
          mkdir -p /downloads/datasets
          python /scripts/data_script.py
          ########################
          echo 'Uploading data to the bucket, to {{ .Values.bucketDataDir | trimSuffix "/" }}'
          mc cp -recursive /downloads/datasets/ minio-host/{{ .Values.bucketDataDir | trimSuffix "/" }}/
          ########################
          echo 'Done'
        env:
        - name: BUCKET_STORAGE_HOST
          value: {{ .Values.bucketStorageHost }}
        - name: BUCKET_STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.bucketCredentialsSecret.name }}
              key: {{ .Values.bucketCredentialsSecret.accessKeyKey }}
        - name: BUCKET_STORAGE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.bucketCredentialsSecret.name }}
              key: {{ .Values.bucketCredentialsSecret.secretKeyKey }}
        resources:
          requests:
            memory: "1Gi"
            cpu: 1
          limits:
            memory: "1Gi"
            cpu: 1
        volumeMounts:
          - mountPath: /downloads
            name: downloads
          - mountPath: /scripts
            name: scripts
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop: ["ALL"]
      securityContext:
        fsGroup: 1000
      volumes:
        - name: scripts
          configMap:
            name: "{{ .Release.Name }}-configs"
        - name: downloads
          {{- if .Values.storageClass }}
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: {{ .Values.storageClass }}
                resources:
                  requests:
                    storage: "{{ .Values.storageQuantity }}"
        {{- else }}
          emptyDir:
            sizeLimit: "{{ .Values.storageQuantity }}"
        {{- end }}
